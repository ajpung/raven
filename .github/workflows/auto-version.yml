name: Auto Version Increment

on:
  push:
    branches: [ main, master, add-version ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'

  pull_request:
    types: [ closed ]
    branches: [ main, master ]

jobs:
  version:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Get current version
        id: get_version
        run: |
          # Get the latest tag or default to v0.0.0 if no tags exist
          CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Determine version bump type
        id: bump_type
        run: |
          # Default to patch version increment
          BUMP_TYPE="patch"
          
          # Check commit messages for bump indicators
          if git log -1 --pretty=%B | grep -i "\[major\]"; then
            BUMP_TYPE="major"
          elif git log -1 --pretty=%B | grep -i "\[minor\]"; then
            BUMP_TYPE="minor"
          fi
          
          echo "Bump type: $BUMP_TYPE"
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=${{ steps.get_version.outputs.current_version }}
          BUMP_TYPE=${{ steps.bump_type.outputs.bump_type }}
          
          # Remove 'v' prefix
          VERSION=${CURRENT_VERSION#v}
          
          # Split version into major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          
          # Increment version based on bump type
          if [ "$BUMP_TYPE" == "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$BUMP_TYPE" == "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          NEW_VERSION=${{ steps.bump_version.outputs.new_version }}
          git tag $NEW_VERSION
          git push origin $NEW_VERSION

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}
          name: Release ${{ steps.bump_version.outputs.new_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}