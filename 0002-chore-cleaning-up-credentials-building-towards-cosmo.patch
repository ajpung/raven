From 051e263c0c5b671b63631c6918aba319e6e1c6e8 Mon Sep 17 00:00:00 2001
From: ajpung <83614749+ajpung@users.noreply.github.com>
Date: Mon, 17 Feb 2025 17:18:31 -0500
Subject: [PATCH 02/13] chore: cleaning up credentials, building towards
 cosmosdb

---
 .gitignore                              |  6 +++++-
 docs/api_keys.json                      |  3 ---
 examples/run.py                         | 13 +++++++------
 src/raven/core/api_base.py              | 17 +++++++++++++++++
 src/raven/modules/weather/collection.py | 15 ---------------
 5 files changed, 29 insertions(+), 25 deletions(-)
 delete mode 100644 docs/api_keys.json
 create mode 100644 src/raven/core/api_base.py

diff --git a/.gitignore b/.gitignore
index 43e7217..724f710 100644
--- a/.gitignore
+++ b/.gitignore
@@ -63,5 +63,9 @@ cython_debug/
 .coverage
 
 # Credentials
-/docs/api_keys.json
+docs/api_keys.json
+examples/Untitled.ipynb
 
+# Jupyter Notebook
+.coverage
+.coverage.*
\ No newline at end of file
diff --git a/docs/api_keys.json b/docs/api_keys.json
deleted file mode 100644
index c2ee00b..0000000
--- a/docs/api_keys.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "tomorrow-io": "9DXEymmoXuBAbEdEBrlGu5cY0VSCFeO8"
-}
\ No newline at end of file
diff --git a/examples/run.py b/examples/run.py
index 61a7257..f12ebfb 100644
--- a/examples/run.py
+++ b/examples/run.py
@@ -1,16 +1,17 @@
-import config
-
 import azure.cosmos.documents as documents
 import azure.cosmos.cosmos_client as cosmos_client
 import azure.cosmos.exceptions as exceptions
 from azure.cosmos.partition_key import PartitionKey
 import datetime
+from raven.core.api_base import collect_keys
 
+# Read configuration from docs/api_keys.json
+keys = collect_keys()
 
-HOST = config.settings["host"]
-MASTER_KEY = config.settings["master_key"]
-DATABASE_ID = config.settings["database_id"]
-CONTAINER_ID = config.settings["container_id"]
+HOST = keys["CosmosDB"]["host"]
+MASTER_KEY = keys["CosmosDB"]["master_key"]
+DATABASE_ID = keys["CosmosDB"]["database_id"]
+CONTAINER_ID = keys["CosmosDB"]["container_id"]
 
 
 def create_items(container):
diff --git a/src/raven/core/api_base.py b/src/raven/core/api_base.py
new file mode 100644
index 0000000..152ada9
--- /dev/null
+++ b/src/raven/core/api_base.py
@@ -0,0 +1,17 @@
+import json
+from typing import Dict
+
+
+def collect_keys(file_path: str = "../docs/api_keys.json") -> Dict[str, str]:
+    """
+    Reads API keys from JSON file
+
+    Args:
+        file_path (str): The path to the JSON file.
+
+    Returns:
+        dict: A dictionary representing the JSON data, or None if an error occurs.
+    """
+    with open(file_path, "r") as file:
+        data: Dict[str, str] = json.load(file)
+        return data
diff --git a/src/raven/modules/weather/collection.py b/src/raven/modules/weather/collection.py
index 2b557f1..7b61550 100644
--- a/src/raven/modules/weather/collection.py
+++ b/src/raven/modules/weather/collection.py
@@ -3,21 +3,6 @@ import requests
 from typing import Dict, Any, cast
 
 
-def collect_keys(file_path: str = "../docs/api_keys.json") -> Dict[str, str]:
-    """
-    Reads API keys from JSON file
-
-    Args:
-        file_path (str): The path to the JSON file.
-
-    Returns:
-        dict: A dictionary representing the JSON data, or None if an error occurs.
-    """
-    with open(file_path, "r") as file:
-        data: Dict[str, str] = json.load(file)
-        return data
-
-
 def collect_tomorrow(apikey: str) -> Dict[str, Any]:
     url = (
         f"https://api.tomorrow.io/v4/weather/realtime?location=toronto&apikey={apikey}"
-- 
2.45.1.windows.1

