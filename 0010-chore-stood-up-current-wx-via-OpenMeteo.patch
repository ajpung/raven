From 5c1f32f71200b9f02db052981c55e2db9e10ddff Mon Sep 17 00:00:00 2001
From: ajpung <83614749+ajpung@users.noreply.github.com>
Date: Wed, 19 Feb 2025 06:40:41 -0500
Subject: [PATCH 10/13] chore: stood up current wx via OpenMeteo

---
 README.md                               |  2 +-
 pyproject.toml                          |  9 ++++-
 src/raven/modules/weather/collection.py | 52 ++++++++++++++++++++++---
 3 files changed, 55 insertions(+), 8 deletions(-)

diff --git a/README.md b/README.md
index e6f9847..996bb51 100644
--- a/README.md
+++ b/README.md
@@ -7,7 +7,7 @@
     Real-time Analysis of Variable Environmental Networks
 </p>
 
-## Status
+##
 [![Documentation Status](https://readthedocs.org/projects/raven-tool/badge/?version=latest)](https://raven-tool.readthedocs.io/en/latest/?badge=latest)
 [![GitHub Actions](https://github.com/ajpung/raven/workflows/RAVEN%20CI/badge.svg)](https://github.com/yourusername/raven/actions) 
 [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=ajpung_raven&metric=alert_status)](https://sonarcloud.io/dashboard?id=yourusername_raven)
diff --git a/pyproject.toml b/pyproject.toml
index 7199cb8..03d87eb 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -18,8 +18,12 @@ dependencies = [
     "ipykernel",
     "pip==25.0.1",
     "azure-cosmos",
+    "pandas-stubs",
+    "black[jupyter]",
     "types-requests",
-    "black[jupyter]"
+    "requests_cache",
+    "retry_requests",
+    "openmeteo_requests"
 ]
 
 [tool.setuptools]
@@ -41,3 +45,6 @@ dev = [
 [tool.poetry.package]
 include = ["py.typed"]
 
+[tool.mypy.overrides]
+module = "retry_requests.*"
+ignore_missing_imports = true
diff --git a/src/raven/modules/weather/collection.py b/src/raven/modules/weather/collection.py
index 15b79ec..d9ce4bb 100644
--- a/src/raven/modules/weather/collection.py
+++ b/src/raven/modules/weather/collection.py
@@ -1,6 +1,10 @@
 import requests
+import pandas as pd
 from typing import Dict, Any, cast, List
 from raven.core.api_base import collect_keys
+import openmeteo_requests  # type: ignore
+import requests_cache
+from retry_requests import retry  # type: ignore
 
 
 def collect_weather(lat: float, lon: float) -> List[Dict[str, Any]]:
@@ -23,22 +27,58 @@ def collect_tomorrow(lat: float, lon: float) -> Dict[str, Any]:
     """
     my_keys = collect_keys()
     apikey = my_keys["Weather"]["tomorrow-io"]
-    url = (
-        f"https://api.tomorrow.io/v4/weather/realtime?location=toronto&apikey={apikey}"
-    )
+    url = f"https://api.tomorrow.io/v4/weather/realtime?location={lat},{lon}&apikey={apikey}"
     response = requests.get(url)
     return cast(Dict[str, Any], response.json())
 
 
 def collect_openwx(lat: float, lon: float) -> Dict[str, Any]:
     """
-    Collects weather data from Tomorrow.io
+    Collects weather data from OpenWeather
 
-    :param apikey: API key for Tomorrow.io
-    :return: Weather data from Tomorrow.io API
+    :return: Weather data from OpenWeather API
     """
     my_keys = collect_keys()
     apikey = my_keys["Weather"]["open-weather"]
     url = f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={apikey}"
     response = requests.get(url)
     return cast(Dict[str, Any], response.json())
+
+
+def collect_openmt(lat: float, lon: float) -> Dict[str, Any]:
+    """
+    Collects weather data from Open-Meteo
+
+    :return: Weather data from Tomorrow.io API
+    """
+    # Setup the Open-Meteo API client with cache and retry on error
+    cache_session = requests_cache.CachedSession(".cache", expire_after=3600)
+    retry_session = retry(cache_session, retries=5, backoff_factor=0.2)
+    openmeteo = openmeteo_requests.Client(session=retry_session)
+
+    url = "https://api.open-meteo.com/v1/forecast"
+    params = {
+        "latitude": lat,
+        "longitude": lon,
+        "current": [
+            "temperature_2m",
+            "relative_humidity_2m",
+            "apparent_temperature",
+            "is_day",
+            "precipitation",
+            "rain",
+            "showers",
+            "snowfall",
+            "weather_code",
+            "cloud_cover",
+            "pressure_msl",
+            "surface_pressure",
+            "wind_speed_10m",
+            "wind_direction_10m",
+            "wind_gusts_10m",
+        ],
+    }
+    responses = openmeteo.weather_api(url, params=params)
+    response = responses[0]
+    current = response.Current()
+    return cast(Dict[str, Any], current.json())
-- 
2.45.1.windows.1

