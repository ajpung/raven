From ca64523ad74b13aa6232d1165c3b954b5b6314dd Mon Sep 17 00:00:00 2001
From: ajpung <83614749+ajpung@users.noreply.github.com>
Date: Tue, 18 Feb 2025 20:19:12 -0500
Subject: [PATCH 09/13] chore: adding OpenWeatherMap to scrape

---
 src/raven/modules/weather/collection.py | 26 ++++++++++++-------------
 1 file changed, 12 insertions(+), 14 deletions(-)

diff --git a/src/raven/modules/weather/collection.py b/src/raven/modules/weather/collection.py
index 985de72..15b79ec 100644
--- a/src/raven/modules/weather/collection.py
+++ b/src/raven/modules/weather/collection.py
@@ -1,29 +1,28 @@
 import requests
-from typing import Dict, Any, cast
+from typing import Dict, Any, cast, List
 from raven.core.api_base import collect_keys
 
 
-def collect_weather(provider: str) -> Dict[str, Any]:
+def collect_weather(lat: float, lon: float) -> List[Dict[str, Any]]:
     """
     Collects weather data from the specified provider
     :param provider: Weather data provider
     :return: Weather data from the specified provider
     """
-    keys = collect_keys()
-    if provider == "Tomorrow-io":
-        data = collect_tomorrow(keys["Tomorrow-io"])
-    else:
-        raise ValueError(f"Provider {provider} is not supported")
-    return data
+    tmrw_data = collect_tomorrow(lat, lon)
+    opwx_data = collect_openwx(lat, lon)
+    return [tmrw_data, opwx_data]
 
 
-def collect_tomorrow(apikey: str) -> Dict[str, Any]:
+def collect_tomorrow(lat: float, lon: float) -> Dict[str, Any]:
     """
     Collects weather data from Tomorrow.io
 
     :param apikey: API key for Tomorrow.io
     :return: Weather data from Tomorrow.io API
     """
+    my_keys = collect_keys()
+    apikey = my_keys["Weather"]["tomorrow-io"]
     url = (
         f"https://api.tomorrow.io/v4/weather/realtime?location=toronto&apikey={apikey}"
     )
@@ -31,16 +30,15 @@ def collect_tomorrow(apikey: str) -> Dict[str, Any]:
     return cast(Dict[str, Any], response.json())
 
 
-def collect_openwx(apikey: str, lat: float, lon: float) -> Dict[str, Any]:
+def collect_openwx(lat: float, lon: float) -> Dict[str, Any]:
     """
     Collects weather data from Tomorrow.io
 
     :param apikey: API key for Tomorrow.io
     :return: Weather data from Tomorrow.io API
     """
-    url = (
-        f"https://api.tomorrow.io/v4/weather/realtime?location=toronto&apikey={apikey}"
-        f"https://api.openweathermap.org/data/2.5/weather?lat={lat} & lon={lon} & appid={apikey}"
-    )
+    my_keys = collect_keys()
+    apikey = my_keys["Weather"]["open-weather"]
+    url = f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={apikey}"
     response = requests.get(url)
     return cast(Dict[str, Any], response.json())
-- 
2.45.1.windows.1

